volumes:
  rabbitmq_data:
  postgres_data:

services:
  rabbit:
    container_name: rabbit
    image: masstransit/rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: developer
      RABBITMQ_DEFAULT_PASS: developer
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3
    ports:
      - "5672:5672"
      - "15672:15672"

  mongo:
    container_name: mongo
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: developer
    ports:
      - "27017:27017"

  jaeger:
    container_name: jaeger
    image: jaegertracing/all-in-one:latest
    ports:
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "16686:16686"
      - "14250:14250"
      - "14268:14268"
      - "14269:14269"
      - "9411:9411"

  ordering-service:
    container_name: ordering-service
    image: shopping-system/ordering-service
    build:
      context: source
      dockerfile: Ordering/Ordering.Service/Dockerfile
    depends_on:
      rabbit:
        condition: service_healthy
      mongo:
        condition: service_started

  ordering-api:
    container_name: ordering-api
    image: shopping-system/ordering-api
    build:
      context: source
      dockerfile: Ordering/Ordering.Api/Dockerfile
    depends_on:
      rabbit:
        condition: service_healthy
    ports:
      - "8080:80"
      - "8443:443"
